from libevent.event import Event
from typing import Dict


class Span(object):
    """Represents an active span. Create via Tracer.start_span."""
    event: Event
    id: str
    parent_id: str
    trace_id: str
    _is_root: bool
    def __init__(self, trace_id: str, parent_id: str, id: str, ev: Event, is_root: bool = False): ...
    def add_context(self, data: Dict) -> None: ...
    def add_context_field(self, key: str, value: str) -> None: ...
    def fields(self) -> Dict: ...
    @property
    def is_root(self) -> bool: ...
    def remove_context_field(self, key) -> None: ...
